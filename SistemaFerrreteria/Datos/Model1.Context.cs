//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaFerrreteria.Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bd_Ferreteria2Entities1 : DbContext
    {
        public bd_Ferreteria2Entities1()
            : base("name=bd_Ferreteria2Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Detalle_Venta> Detalle_Venta { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
    
        public virtual int usp_proveedor_actualizar(Nullable<int> idProveedor, string nombreEmpresa, string nombreContacto, string correo, string telefonoCon, string direccion, string ruc)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("nombreEmpresa", nombreEmpresa) :
                new ObjectParameter("nombreEmpresa", typeof(string));
    
            var nombreContactoParameter = nombreContacto != null ?
                new ObjectParameter("nombreContacto", nombreContacto) :
                new ObjectParameter("nombreContacto", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoConParameter = telefonoCon != null ?
                new ObjectParameter("telefonoCon", telefonoCon) :
                new ObjectParameter("telefonoCon", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("ruc", ruc) :
                new ObjectParameter("ruc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_proveedor_actualizar", idProveedorParameter, nombreEmpresaParameter, nombreContactoParameter, correoParameter, telefonoConParameter, direccionParameter, rucParameter);
        }
    
        public virtual int usp_proveedor_eliminar(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_proveedor_eliminar", idProveedorParameter);
        }
    
        public virtual int usp_Proveedor_insertar(Nullable<int> idProveedor, string nombreEmpresa, string nombreContacto, string correo, string telefonoCon, string direccion, string ruc)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("nombreEmpresa", nombreEmpresa) :
                new ObjectParameter("nombreEmpresa", typeof(string));
    
            var nombreContactoParameter = nombreContacto != null ?
                new ObjectParameter("nombreContacto", nombreContacto) :
                new ObjectParameter("nombreContacto", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoConParameter = telefonoCon != null ?
                new ObjectParameter("telefonoCon", telefonoCon) :
                new ObjectParameter("telefonoCon", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("ruc", ruc) :
                new ObjectParameter("ruc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Proveedor_insertar", idProveedorParameter, nombreEmpresaParameter, nombreContactoParameter, correoParameter, telefonoConParameter, direccionParameter, rucParameter);
        }
    
        public virtual int usp_Proveedor_Merge(Nullable<int> idProveedor, string nombreEmpresa, string nombreContacto, string correo, string telefonoCon, string direccion, string ruc)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("nombreEmpresa", nombreEmpresa) :
                new ObjectParameter("nombreEmpresa", typeof(string));
    
            var nombreContactoParameter = nombreContacto != null ?
                new ObjectParameter("nombreContacto", nombreContacto) :
                new ObjectParameter("nombreContacto", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var telefonoConParameter = telefonoCon != null ?
                new ObjectParameter("telefonoCon", telefonoCon) :
                new ObjectParameter("telefonoCon", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("ruc", ruc) :
                new ObjectParameter("ruc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Proveedor_Merge", idProveedorParameter, nombreEmpresaParameter, nombreContactoParameter, correoParameter, telefonoConParameter, direccionParameter, rucParameter);
        }
    
        public virtual ObjectResult<usp_ProveedorListar_Result> usp_ProveedorListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProveedorListar_Result>("usp_ProveedorListar");
        }
    }
}
